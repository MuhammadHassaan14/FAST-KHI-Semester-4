Shell Scripting Practice Questions:

1. A library manager wants a shell script to keep track of book records. The script should allow adding new books with details like title, author, and year, searching for books by title, listing all books, and deleting a book from the records. The script should use a text file for data storage and provide appropriate messages if a book is not found or if an invalid operation is attempted. The script should be menu-driven.

2. A server administrator needs a shell script to automate disk space monitoring. The script should check the available disk space, alert if usage exceeds 80%, and log the usage details into a file. The script should run at regular intervals and send a notification to the administrator if the disk space is critically low. The script should be menu-driven.

3. A coffee shop wants a shell script to automate order processing using a menu-driven system. The script should allow customers to select a coffee type (Espresso, Cappuccino, or Latte) and choose a size (Small, Medium, or Large). The script should validate the input and display an error if an invalid choice is made. After selection, the script should calculate the total price based on coffee type and size. If a customer orders more than 3 cups, a discount should be applied. Additionally, if the customer is a loyal member, they should receive an extra discount. The script should run in a loop until the user chooses to exit, ensuring smooth order processing with multiple if-else conditions for input validation, discount application, and pricing.

Solutions:

1. #!/bin/bash
BOOK_FILE="books.txt"

while true; do
    echo -e "\nLibrary Manager"
    echo "1. Add Book"
    echo "2. Search Book"
    echo "3. List Books"
    echo "4. Delete Book"
    echo "5. Exit"
    read -p "Choose an option: " option

    case $option in
        1)
            read -p "Enter Title: " title
            read -p "Enter Author: " author
            read -p "Enter Year: " year
            echo "$title | $author | $year" >> $BOOK_FILE
            echo "Book added successfully!"
            ;;
        2)
            read -p "Enter title to search: " search_title
            grep -i "$search_title" $BOOK_FILE || echo "Book not found!"
            ;;
        3)
            echo -e "\nBook Records:"
            cat $BOOK_FILE 2>/dev/null || echo "No books available!"
            ;;
        4)
            read -p "Enter title to delete: " del_title
            grep -iv "$del_title" $BOOK_FILE > temp.txt && mv temp.txt $BOOK_FILE
            echo "Book deleted if it existed!"
            ;;
        5)
            echo "Exiting..."
            break
            ;;
        *)
            echo "Invalid option! Try again."
            ;;
    esac
done
------------------------------------------------------------------------------------------------------------------------------------


2.#!/bin/bash
THRESHOLD=80  # Alert if disk usage exceeds this percentage

while true; do
    USAGE=$(df / | grep '/' | tr -s ' ' | cut -d' ' -f5 | tr -d '%')

    echo "Current Disk Usage: $USAGE%"

    if [ $USAGE -ge $THRESHOLD ]; then
        echo "Warning: Disk space is critically high!"
    fi

    sleep 60  # Check every 60 seconds
done

df / → Gets disk usage for root (/).
grep '/' → Filters the relevant line.
tr -s ' ' → Squeezes multiple spaces into a single space for easier parsing.
cut -d' ' -f5 → Extracts the percentage column.
tr -d '%' → Removes the % sign.
--------------------------------------------------------------------------------------------------------------------------------------

3. #!/bin/bash
while true; do
    echo -e "\nCoffee Shop Menu:"
    echo "1. Espresso - Small: $3, Medium: $4, Large: $5"
    echo "2. Cappuccino - Small: $4, Medium: $5, Large: $6"
    echo "3. Latte - Small: $5, Medium: $6, Large: $7"
    echo "4. Exit"

    read -p "Choose a coffee type (1-3): " coffee_type
    if [ "$coffee_type" -eq 4 ]; then
        echo "Goodbye!"
        break
    fi

    read -p "Choose size (Small/Medium/Large): " size
    read -p "Enter quantity: " quantity
    read -p "Are you a loyal member? (yes/no): " member

    case $coffee_type in
        1) price=3 ;;
        2) price=4 ;;
        3) price=5 ;;
        *) echo "Invalid choice!" && continue ;;
    esac

    case $size in
        Medium) price=$((price + 1)) ;;
        Large) price=$((price + 2)) ;;
        Small) ;;
        *) echo "Invalid size!" && continue ;;
    esac

    total=$((price * quantity))

    if [ $quantity -gt 3 ]; then
        total=$((total * 90 / 100))  # 10% discount for bulk orders
    fi

    if [ "$member" == "yes" ]; then
        total=$((total * 95 / 100))  # Extra 5% discount for loyal members
    fi

    echo "Total price: $$total"
done